// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TTX.Data;

#nullable disable

namespace TTX.Data.Migrations
{
    [DbContext(typeof(AssetsContext))]
    [Migration("20221219194600_FirstRun")]
    partial class FirstRun
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("TTX.Data.Entities.AssetDescription", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Added")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TagsString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("UUID")
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Descriptions");
                });

            modelBuilder.Entity("TTX.Data.Entities.AssetIdentity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("GUID")
                        .HasColumnType("BLOB");

                    b.Property<string>("LastLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Identities");
                });

            modelBuilder.Entity("TTX.Data.Entities.AssetIntegrity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("FileCrumbs")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("GUID")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("SHA2")
                        .HasColumnType("BLOB");

                    b.HasKey("ID");

                    b.ToTable("Hashes");
                });

            modelBuilder.Entity("TTX.Data.Entities.AssetMediaInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Container")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultAudioTrackCodec")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultSubtitlesFormat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultVideoTrackCodec")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("GUID")
                        .HasColumnType("BLOB");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Length")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("MediaInfos");
                });

            modelBuilder.Entity("TTX.Data.Entities.AssetMetadata", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("GUID")
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<long>("SizeBytes")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Metadatas");
                });

            modelBuilder.Entity("TTX.Data.Entities.TagInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AllowAssign")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
